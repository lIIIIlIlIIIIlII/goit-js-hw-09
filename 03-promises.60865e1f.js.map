{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEpCJ,EAAQ,CAAEH,WAAUC,UACpBO,EAAAX,GAASY,OAAOC,QAAQ,WAAoCC,OAAzBX,EAAS,kBAAsBW,OAANV,EAAM,SAElEG,EAAO,CAAEJ,WAAUC,UACnBO,EAAAX,GAASY,OAAOG,QAAQ,WAAmCD,OAAxBX,EAAS,iBAAqBW,OAANV,EAAM,O,GAElEA,E,IAbMY,SAASC,cAAc,SAiB/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAYN,IAVA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEhCG,EAAeL,EAEVM,EAAI,EAAGA,GAAKF,EAAQE,IAC3B5B,EAAc4B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,QAAQC,IAAI,uBAAwCpB,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAE3D+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,QAAQC,IAAI,sBAAqCpB,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAG3DyB,GAAgBF,EAGlBhB,EAAAX,GAASoC,OAAOvB,QAAQ,yBAA0B,GAAUC,OAAPc,EAAO,6C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        Notiflix.Notify.success(`Promise ${position} fulfilled in ${delay}ms`);\n      } else {\n        reject({ position, delay });\n        Notiflix.Notify.failure(`Promise ${position} rejected in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n  \n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  \n  let currentDelay = delay;\n  \n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      \n    currentDelay += step;\n  }\n  \n  Notiflix.Report.success('All promises fulfilled', `${amount} promises fulfilled successfully in total`);\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","currentDelay","i","then","param","console","log","catch","Report"],"version":3,"file":"03-promises.60865e1f.js.map"}