{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IACpBO,EAAAX,GAASY,OAAOC,QAAQ,WAAWV,kBAAyBC,SAE5DG,EAAO,C,SAAEJ,E,MAAUC,IACnBO,EAAAX,GAASY,OAAOE,QAAQ,WAAWX,iBAAwBC,O,GAE5DA,EAAM,G,CAbAW,SAASC,cAAc,SAiB/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEpC,IAAIG,EAAeL,EAEnB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3B3B,EAAc2B,EAAGD,GACdE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,QAAQC,IAAI,uBAAqB7B,QAAiBC,MAAU,IAE7D6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB2B,QAAQC,IAAI,sBAAoB7B,QAAeC,MAAU,IAG7DwB,GAAgBF,EAGlBf,EAAAX,GAASkC,OAAOrB,QAAQ,yBAA0B,GAAGc,6CAAkD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        Notiflix.Notify.success(`Promise ${position} fulfilled in ${delay}ms`);\n      } else {\n        reject({ position, delay });\n        Notiflix.Notify.failure(`Promise ${position} rejected in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n  \n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  \n  let currentDelay = delay;\n  \n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      \n    currentDelay += step;\n  }\n  \n  Notiflix.Report.success('All promises fulfilled', `${amount} promises fulfilled successfully in total`);\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","currentDelay","i","then","console","log","catch","Report"],"version":3,"file":"03-promises.b9ecf097.js.map"}